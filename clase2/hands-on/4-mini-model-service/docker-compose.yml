services:
#Usamos una base de datos que ya existe y usamos esa imagen del repositorio
  postgres:
    restart: always
    image: postgres
    container_name: postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - net
    #Variables de ambiente
    env_file:
      - .env
    volumes:
      - ./dataset:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-p", "5432", "-U", "${POSTGRES_USER:-postgres}" ]
      interval: 60s
      timeout: 20s
      retries: 3
#Es un modelo de predicción de salario. Va a contruir la imagen de la capeta dockerfiles
  salary:
    restart: always
    build: "./dockerfiles/salary_app" #Construye la imagen dentro de dockerfiles.
    image: salary_app
    container_name: salary_app
    #Va a trabajar sobre el mismo puerto
    ports:
      - "${SALARY_PORT:-8501}:8501"
    networks:
      - net
    env_file:
      - .env

# Crea una red donde se van a comunicar las dos imágenes
networks:
  net:
    driver: bridge